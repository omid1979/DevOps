version: '3.8'

services:
  # Elasticsearch
  elasticsearch:
    image: docker.arvancloud.ir/elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=elk-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=Cluster@76411
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Logstash
  logstash:
    image: docker.arvancloud.ir/logstash:8.17.1
    container_name: logstash
    environment:
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=["http://elasticsearch:9200"]
      - xpack.monitoring.elasticsearch.username=elastic
      - xpack.monitoring.elasticsearch.password=Cluster@76411
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk-network
    depends_on:
      - elasticsearch

  # Kibana
  kibana:
    image: docker.arvancloud.ir/kibana:8.17.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      # Use the elastic superuser for initial setup
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=Cluster@76411
      - xpack.security.enabled=true
      - xpack.encryptedSavedObjects.encryptionKey=encryptionkeyatleast32characters
      - xpack.reporting.encryptionKey=reportingkeyatleast32characters
      - xpack.security.encryptionKey=securitykeyatleast32characters
      # Enable Kibana to generate its own service tokens 
      - ENTERPRISESEARCH_HOST=http://enterprisesearch:3002
    ports:
      - "5601:5601"
    networks:
      - elk-network
    depends_on:
      - elasticsearch

  # Setup for initial configuration and enrollment
  setup:
    image: docker.arvancloud.ir/elasticsearch:8.17.1
    container_name: elk-setup
    volumes:
      - ./setup:/setup
    command: >
      bash -c '
        echo "Waiting for Elasticsearch to start..."
        while ! curl -s http://elasticsearch:9200 >/dev/null; do
          sleep 2
        done

        echo "Creating initial setup script..."
        cat > /setup/init-elastic.sh << "EOF"
        #!/bin/bash
        # Retrieve enrollment token for Kibana
        KIBANA_TOKEN=$(bin/elasticsearch-create-enrollment-token -s kibana --url http://elasticsearch:9200 -u elastic -p Cluster@76411)
        echo "Kibana enrollment token: $KIBANA_TOKEN"
        
        # Disable anonymous access
        curl -X PUT "http://elasticsearch:9200/_security/settings" -H "Content-Type: application/json" -u elastic:Cluster@76411 -d "{\"persistent\": {\"xpack.security.http.anonymous\": {\"enabled\": false}}}"
        
        # Create roles for Kibana if needed
        echo "Setup completed"
        EOF
        
        chmod +x /setup/init-elastic.sh
        
        echo "Running setup script..."
        /setup/init-elastic.sh
        
        echo "All setup tasks completed."
      '
    networks:
      - elk-network
    depends_on:
      - elasticsearch

networks:
  elk-network:
    driver: bridge

volumes:
  elasticsearch-data:
    driver: local

